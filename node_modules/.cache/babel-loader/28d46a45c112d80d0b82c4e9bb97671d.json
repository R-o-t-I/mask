{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"header\", \"description\", \"children\", \"separator\", \"getRootRef\", \"mode\", \"sizeX\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport Separator from \"../Separator/Separator\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport Caption from \"../Typography/Caption/Caption\";\nimport { withAdaptivity, SizeType } from \"../../hoc/withAdaptivity\";\nimport ModalRootContext from \"../ModalRoot/ModalRootContext\";\n\nvar Group = function Group(props) {\n  var header = props.header,\n      description = props.description,\n      children = props.children,\n      separator = props.separator,\n      getRootRef = props.getRootRef,\n      mode = props.mode,\n      sizeX = props.sizeX,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var _React$useContext = React.useContext(ModalRootContext),\n      isInsideModal = _React$useContext.isInsideModal;\n\n  var platform = usePlatform();\n  var computedMode = mode;\n\n  if (!mode) {\n    computedMode = sizeX === SizeType.COMPACT || isInsideModal ? \"plain\" : \"card\";\n  }\n\n  return createScopedElement(\"section\", _extends({}, restProps, {\n    ref: getRootRef,\n    vkuiClass: classNames(getClassName(\"Group\", platform), \"Group--sizeX-\".concat(sizeX), \"Group--\".concat(computedMode))\n  }), createScopedElement(\"div\", {\n    vkuiClass: \"Group__inner\"\n  }, header, children, hasReactNode(description) && createScopedElement(Caption, {\n    vkuiClass: \"Group__description\",\n    weight: \"regular\",\n    level: \"1\"\n  }, description)), separator !== \"hide\" && createScopedElement(Separator, {\n    vkuiClass: classNames(\"Group__separator\", {\n      \"Group__separator--force\": separator === \"show\"\n    }),\n    expanded: computedMode === \"card\"\n  }));\n};\n\nGroup.defaultProps = {\n  separator: \"auto\"\n}; // eslint-disable-next-line import/no-default-export\n\nexport default withAdaptivity(Group, {\n  sizeX: true\n});","map":null,"metadata":{},"sourceType":"module"}