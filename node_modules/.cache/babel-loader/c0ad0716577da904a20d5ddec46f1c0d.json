{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"targetRef\", \"scrollBoxRef\", \"placement\", \"fetching\", \"onPlacementChange\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport CustomScrollView from \"../CustomScrollView/CustomScrollView\";\nimport { classNames } from \"../../lib/classNames\";\nimport { Popper } from \"../Popper/Popper\";\nimport Spinner from \"../Spinner/Spinner\";\n\nvar calcIsTop = function calcIsTop(placement) {\n  return placement === null || placement === void 0 ? void 0 : placement.includes(\"top\");\n};\n\nexport var CustomSelectDropdown = function CustomSelectDropdown(_ref) {\n  var children = _ref.children,\n      targetRef = _ref.targetRef,\n      scrollBoxRef = _ref.scrollBoxRef,\n      placement = _ref.placement,\n      fetching = _ref.fetching,\n      parentOnPlacementChange = _ref.onPlacementChange,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useState = React.useState(function () {\n    return calcIsTop(placement);\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isTop = _React$useState2[0],\n      setIsTop = _React$useState2[1];\n\n  var onPlacementChange = React.useCallback(function (_ref2) {\n    var placement = _ref2.placement;\n    setIsTop(calcIsTop(placement));\n    parentOnPlacementChange === null || parentOnPlacementChange === void 0 ? void 0 : parentOnPlacementChange(placement);\n  }, [parentOnPlacementChange, setIsTop]);\n  return createScopedElement(Popper, _extends({\n    targetRef: targetRef,\n    offsetDistance: 0,\n    sameWidth: true,\n    onPlacementChange: onPlacementChange,\n    placement: placement,\n    vkuiClass: classNames(\"CustomSelectDropdown__options\", {\n      \"CustomSelectDropdown__options--popupDirectionTop\": isTop\n    })\n  }, restProps), createScopedElement(CustomScrollView, {\n    boxRef: scrollBoxRef,\n    vkuiClass: \"CustomSelectDropdown__CustomScrollView\"\n  }, fetching ? createScopedElement(\"div\", {\n    vkuiClass: \"CustomSelectDropdown__fetching\"\n  }, createScopedElement(Spinner, {\n    size: \"small\"\n  })) : children));\n};","map":null,"metadata":{},"sourceType":"module"}