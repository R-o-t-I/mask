{"ast":null,"code":"import { canUseDOM } from \"@vkontakte/vkjs\";\n/*\n * Получает координату по оси абсцисс из touch- или mouse-события\n */\n\nvar coordX = function coordX(e) {\n  if (e.clientX != null) {\n    return e.clientX;\n  }\n\n  return e.changedTouches && e.changedTouches[0].clientX;\n};\n/*\n * Получает координату по оси ординат из touch- или mouse-события\n */\n\n\nvar coordY = function coordY(e) {\n  if (e.clientY != null) {\n    return e.clientY;\n  }\n\n  return e.changedTouches && e.changedTouches[0].clientY;\n}; // eslint-disable-next-line no-restricted-globals\n\n\nvar touchEnabled = function touchEnabled() {\n  return canUseDOM && \"ontouchstart\" in window;\n};\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\n\n\nfunction getSupportedEvents() {\n  if (touchEnabled()) {\n    return [\"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"];\n  }\n\n  return [\"mousedown\", \"mousemove\", \"mouseup\", \"mouseleave\"];\n}\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\n\n\nfunction rubber(offset, dimension, resistanceRate, isAndroid) {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n\n  var offsettedResistance = offset * resistanceRate;\n  return offsettedResistance * dimension / (offsettedResistance + dimension);\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };","map":null,"metadata":{},"sourceType":"module"}