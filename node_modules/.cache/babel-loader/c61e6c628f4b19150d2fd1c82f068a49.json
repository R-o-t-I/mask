{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 20 20';\nvar id = 'chain_20';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" id=\"chain_20\"><g fill=\"currentColor\"><path d=\"M12.517 4.176a2.357 2.357 0 013.303 0 2.273 2.273 0 010 3.242l-.687.679a.75.75 0 001.055 1.066l.687-.678a3.772 3.772 0 000-5.376 3.857 3.857 0 00-5.413 0L8.125 6.408a3.772 3.772 0 000 5.375.75.75 0 101.055-1.066 2.272 2.272 0 010-3.242z\" /><path d=\"M7.483 15.824c-.91.901-2.392.901-3.303 0a2.272 2.272 0 010-3.242l.687-.679a.75.75 0 00-1.055-1.066l-.687.678a3.772 3.772 0 000 5.376 3.857 3.857 0 005.413 0l3.337-3.299a3.772 3.772 0 000-5.375.75.75 0 00-1.055 1.066 2.272 2.272 0 010 3.242z\" /></g></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon20Chain = function Icon20Chain(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 20,\n    height: !isNaN(props.height) ? +props.height : 20\n  }));\n};\n\nIcon20Chain.mountIcon = mountIcon;\nexport default Icon20Chain;","map":null,"metadata":{},"sourceType":"module"}