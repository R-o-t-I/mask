{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"activeStory\", \"tabbar\", \"children\", \"viewWidth\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { withAdaptivity, ViewWidth } from \"../../hoc/withAdaptivity\";\nimport { ScrollSaver } from \"./ScrollSaver\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nvar warn = warnOnce(\"Epic\");\nexport var Epic = function Epic(props) {\n  var _ref;\n\n  var platform = usePlatform();\n  var scroll = React.useRef({}).current;\n\n  var activeStory = props.activeStory,\n      tabbar = props.tabbar,\n      children = props.children,\n      viewWidth = props.viewWidth,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  if (process.env.NODE_ENV === \"development\" && !tabbar && viewWidth < ViewWidth.SMALL_TABLET) {\n    warn(\"Using Epic without tabbar is not recommended on mobile\");\n  }\n\n  var story = (_ref = React.Children.toArray(children).find(function (story) {\n    return /*#__PURE__*/React.isValidElement(story) && getNavId(story.props, warn) === activeStory;\n  })) !== null && _ref !== void 0 ? _ref : null;\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: getClassName(\"Epic\", platform)\n  }), createScopedElement(ScrollSaver, {\n    key: activeStory,\n    initialScroll: scroll[activeStory] || 0,\n    saveScroll: function saveScroll(value) {\n      return scroll[activeStory] = value;\n    }\n  }, story), tabbar);\n}; // eslint-disable-next-line import/no-default-export\n\nexport default withAdaptivity(Epic, {\n  viewWidth: true\n});","map":null,"metadata":{},"sourceType":"module"}