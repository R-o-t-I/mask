{"ast":null,"code":"import { createScopedElement } from \"./jsxRuntime\";\nimport * as React from \"react\";\nimport { platform } from \"./platform\";\nimport { computeBrowserInfo } from \"./browser\";\nimport { DOMContext, getDOM } from \"../lib/dom\";\nexport var SSRContext = /*#__PURE__*/React.createContext({\n  platform: null,\n  userAgent: \"\",\n  browserInfo: undefined\n});\nexport var SSRWrapper = function SSRWrapper(props) {\n  var userAgent = props.userAgent,\n      browserInfo = props.browserInfo,\n      children = props.children;\n\n  if (!browserInfo && userAgent) {\n    browserInfo = computeBrowserInfo(userAgent);\n  } // TODO: Каждый раз создаётся новый объект для контекста - плохо\n\n\n  var contextValue = {\n    platform: platform(browserInfo),\n    browserInfo: browserInfo,\n    userAgent: userAgent\n  }; // TODO: move to state, and update in effect?\n\n  var dom = getDOM();\n  return createScopedElement(SSRContext.Provider, {\n    value: contextValue\n  }, createScopedElement(DOMContext.Provider, {\n    value: dom\n  }, children));\n};","map":null,"metadata":{},"sourceType":"module"}