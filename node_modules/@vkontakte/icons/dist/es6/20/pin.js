import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 20 20';
var id = 'pin_20';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20" id="pin_20"><path fill="currentColor" d="M12.598 2.22a.75.75 0 00-1.266.383l-.308 1.54a.297.297 0 01-.08.152L8.48 6.758a.297.297 0 01-.187.087l-3.859.296c-.883.093-1.238 1.124-.638 1.725l2.962 2.961-4.465 4.466a1 1 0 001.414 1.414l4.466-4.465 2.962 2.962c.62.62 1.659.215 1.724-.637l.297-3.859a.297.297 0 01.086-.187l2.463-2.463a.297.297 0 01.152-.082l1.54-.308a.75.75 0 00.383-1.265L12.598 2.22z" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon20Pin = function Icon20Pin(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 20,
    height: !isNaN(props.height) ? +props.height : 20
  }));
};

Icon20Pin.mountIcon = mountIcon;
export default Icon20Pin;
//# sourceMappingURL=pin.js.map