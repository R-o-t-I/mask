import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 16 16';
var id = 'reply_16';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16" id="reply_16"><path fill="currentColor" d="M8.044 1.499c-.4-.007-.747.171-1.022.343-.278.174-.61.426-.999.72L1.32 6.132C.87 6.473.33 6.822.119 7.37a1.746 1.746 0 000 1.259c.208.539.735.884 1.176 1.219l4.73 3.589c.387.295.72.547.998.72.275.172.62.35 1.021.344a1.746 1.746 0 001.344-.67c.247-.315.313-.698.342-1.021.03-.327.028-.744.027-1.231l-.002-.897c.996.088 1.778.354 2.461.759.863.51 1.616 1.268 2.455 2.286A.75.75 0 0016 13.25c0-2.036-.453-3.966-1.571-5.497C13.4 6.343 11.856 5.34 9.755 4.88l.001-.458c.002-.487.003-.904-.026-1.231-.03-.323-.095-.707-.342-1.022a1.746 1.746 0 00-1.344-.67z" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon16Reply = function Icon16Reply(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 16,
    height: !isNaN(props.height) ? +props.height : 16
  }));
};

Icon16Reply.mountIcon = mountIcon;
export default Icon16Reply;
//# sourceMappingURL=reply.js.map