import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 28 28';
var id = 'block_circle_fill_gray_28';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 28 28" id="block_circle_fill_gray_28"><path fill="url(#block_circle_fill_gray_28_a)" d="M0 14C0 6.268 6.268 0 14 0s14 6.268 14 14-6.268 14-14 14S0 21.732 0 14z" /><path fill="#fff" fill-rule="evenodd" d="M14 22a8 8 0 100-16 8 8 0 000 16zm0-1.5A6.5 6.5 0 018.904 9.965l9.131 9.131A6.472 6.472 0 0114 20.5zm6.5-6.5A6.5 6.5 0 009.965 8.904l9.131 9.131A6.472 6.472 0 0020.5 14z" clip-rule="evenodd" /><defs><linearGradient id="block_circle_fill_gray_28_a" x1="-14" x2="14" y1="14" y2="42" gradientUnits="userSpaceOnUse"><stop stop-color="#B1B6BD" /><stop offset="1" stop-color="#99A2AD" /></linearGradient></defs></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon28BlockCircleFillGray = function Icon28BlockCircleFillGray(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 28,
    height: !isNaN(props.height) ? +props.height : 28
  }));
};

Icon28BlockCircleFillGray.mountIcon = mountIcon;
export default Icon28BlockCircleFillGray;
//# sourceMappingURL=block_circle_fill_gray.js.map